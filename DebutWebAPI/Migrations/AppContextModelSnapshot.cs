// <auto-generated />
using System;
using DebutWebAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DebutWebAPI.Migrations
{
    [DbContext(typeof(Models.AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DebutWebAPI.Models.Citizen", b =>
                {
                    b.Property<long>("CitizenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvatarURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<byte[]>("Hash")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("IdCardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("CitizenId");

                    b.ToTable("Citizens");

                    b.HasData(
                        new
                        {
                            CitizenId = 1L,
                            DOB = new DateTime(2001, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nhtrung.1102@gmail.com",
                            FullName = "Nguyen Hoan Trung",
                            Gender = 0,
                            IdCardNumber = "001002003004",
                            PhoneNumber = "0123456789",
                            Username = "nhtrung"
                        });
                });

            modelBuilder.Entity("DebutWebAPI.Models.Device", b =>
                {
                    b.Property<long>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeviceBrand")
                        .HasColumnType("int");

                    b.Property<int>("DeviceType")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("RoomId")
                        .HasColumnType("bigint");

                    b.HasKey("DeviceId");

                    b.HasIndex("RoomId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("DebutWebAPI.Models.Room", b =>
                {
                    b.Property<long>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("OwnerIdCitizenId")
                        .HasColumnType("bigint");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.Property<long?>("SmartHomeId")
                        .HasColumnType("bigint");

                    b.HasKey("RoomId");

                    b.HasIndex("OwnerIdCitizenId");

                    b.HasIndex("SmartHomeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("DebutWebAPI.Models.RoomDevice", b =>
                {
                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.Property<long>("DeviceId")
                        .HasColumnType("bigint");

                    b.HasKey("RoomId", "DeviceId");

                    b.HasIndex("DeviceId");

                    b.ToTable("RoomDevices");
                });

            modelBuilder.Entity("DebutWebAPI.Models.RoomOwner", b =>
                {
                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.HasKey("RoomId", "OwnerId");

                    b.HasIndex("OwnerId");

                    b.ToTable("RoomOwners");
                });

            modelBuilder.Entity("DebutWebAPI.Models.SmartHome", b =>
                {
                    b.Property<long>("SmartHomeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("District")
                        .HasColumnType("int");

                    b.Property<int>("SmartHomeType")
                        .HasColumnType("int");

                    b.HasKey("SmartHomeId");

                    b.ToTable("SmartHomes");
                });

            modelBuilder.Entity("DebutWebAPI.Models.SmartHomeCitizen", b =>
                {
                    b.Property<long>("SmarHomeId")
                        .HasColumnType("bigint");

                    b.Property<long>("CitizenId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SmartHomeId")
                        .HasColumnType("bigint");

                    b.HasKey("SmarHomeId", "CitizenId");

                    b.HasIndex("CitizenId");

                    b.HasIndex("SmartHomeId");

                    b.ToTable("SmartHomeCitizens");
                });

            modelBuilder.Entity("DebutWebAPI.Models.SmartHomeOwner", b =>
                {
                    b.Property<long>("SmarHomeId")
                        .HasColumnType("bigint");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SmartHomeId")
                        .HasColumnType("bigint");

                    b.HasKey("SmarHomeId", "OwnerId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("SmartHomeId");

                    b.ToTable("SmartHomeOwners");
                });

            modelBuilder.Entity("DebutWebAPI.Models.Device", b =>
                {
                    b.HasOne("DebutWebAPI.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DebutWebAPI.Models.Room", b =>
                {
                    b.HasOne("DebutWebAPI.Models.Citizen", "OwnerId")
                        .WithMany()
                        .HasForeignKey("OwnerIdCitizenId");

                    b.HasOne("DebutWebAPI.Models.SmartHome", "SmartHome")
                        .WithMany("Rooms")
                        .HasForeignKey("SmartHomeId");

                    b.Navigation("OwnerId");

                    b.Navigation("SmartHome");
                });

            modelBuilder.Entity("DebutWebAPI.Models.RoomDevice", b =>
                {
                    b.HasOne("DebutWebAPI.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DebutWebAPI.Models.Room", "Room")
                        .WithMany("RoomDevices")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DebutWebAPI.Models.RoomOwner", b =>
                {
                    b.HasOne("DebutWebAPI.Models.Citizen", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DebutWebAPI.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DebutWebAPI.Models.SmartHomeCitizen", b =>
                {
                    b.HasOne("DebutWebAPI.Models.Citizen", "Citizen")
                        .WithMany("SmartHomeCitizens")
                        .HasForeignKey("CitizenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DebutWebAPI.Models.SmartHome", "SmartHome")
                        .WithMany("SmartHomeCitizens")
                        .HasForeignKey("SmartHomeId");

                    b.Navigation("Citizen");

                    b.Navigation("SmartHome");
                });

            modelBuilder.Entity("DebutWebAPI.Models.SmartHomeOwner", b =>
                {
                    b.HasOne("DebutWebAPI.Models.Citizen", "Owner")
                        .WithMany("SmartHomeOwners")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DebutWebAPI.Models.SmartHome", "SmartHome")
                        .WithMany("SmartHomeOwners")
                        .HasForeignKey("SmartHomeId");

                    b.Navigation("Owner");

                    b.Navigation("SmartHome");
                });

            modelBuilder.Entity("DebutWebAPI.Models.Citizen", b =>
                {
                    b.Navigation("SmartHomeCitizens");

                    b.Navigation("SmartHomeOwners");
                });

            modelBuilder.Entity("DebutWebAPI.Models.Room", b =>
                {
                    b.Navigation("RoomDevices");
                });

            modelBuilder.Entity("DebutWebAPI.Models.SmartHome", b =>
                {
                    b.Navigation("Rooms");

                    b.Navigation("SmartHomeCitizens");

                    b.Navigation("SmartHomeOwners");
                });
#pragma warning restore 612, 618
        }
    }
}
